)
View(cds.spread)
View(cds.returns)
View(cds.spread)
# scatter plot summary
pairs.panels(cds.spread[, 1:6],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
# scatter plot summary cds.returns
pairs.panels(cds.returns[, 1:6],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variables
data.set = "automotive"
data.path <- switch(data.set,
"retail" = file.path(here(), '/../../../CQF/Project/data/Retail'),
"banks" = file.path(here(), '/../../../CQF/Project/data/Banks'),
"automotive" = file.path(here(), '/../../../CQF/Project/data/Automotive'),
"insurance" = file.path(here(), '/../../../CQF/Project/data/Insurance'))
range.price_history <- switch(data.set,
"retail" = 'B2:G2821',
"banks" = 'B2:J2791',
"automotive" = 'B2:G2798',
"insurance" = 'B2:L2821')
range.entities <- switch(data.set,
"retail" = 'A1:B6',
"banks" = 'A1:B10',
"automotive" = 'A1:B6',
"insurance" = 'A1:B11')
num.entities <- switch(data.set,
"retail" =  5,
"banks" = 9,
"automotive" = 5,
"insurance" = 10)
excel.file <- 'CDS_spreads.xlsx'
sheet.price_history <- 'Equity_prices'
sheet.entities <- 'Entities'
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
zero.cutoff <- 0.0005 # returns / differences smaller than this threshold value are considered to be zero
# Function definitions
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(X, h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
drop.name = function(series.name, spread.frame, entities.frame){
spread.frame <- spread.frame[names(spread.frame) != series.name]
entities.frame <- subset(entities.frame, entities.frame$Name != series.name)
num.entities = num.entities-1
resultList <- list("spreads" = spread.frame, "entities" = entities.frame, "count_entities" = num.entities)
return(resultList)
}
# read in Excel file, tab CDS_spreads_history into R dataframe
equity.price = read_excel(file.path(data.path, excel.file),
sheet.price_history,
range = range.price_history)
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variable values
data.set = "insurance"
data.path <- switch(data.set,
"retail" = file.path(here(), '/../../../CQF/basket_default_swap/data/Retail'),
"banks" = file.path(here(), '/../../../CQF/basket_default_swap/data/Banks'),
"automotive" = file.path(here(), '/../../../CQF/basket_default_swap/data/Automotive'),
"insurance" = file.path(here(), '/../../../CQF/basket_default_swap/data/Insurance'))
range.spreads_history <- switch(data.set,
"retail" = 'E21:J2104',
"banks" = 'E21:N1975',
"automotive" = 'E21:J2104',
"insurance" = 'E21:O1974')
range.entities <- switch(data.set,
"retail" = 'A1:B6',
"banks" = 'A1:B10',
"automotive" = 'A1:B6',
"insurance" = 'A1:B11')
num.entities <- switch(data.set,
"retail" =  5,
"banks" = 9,
"automotive" = 5,
"insurance" = 10)
excel.file <- 'CDS_spreads.xlsx'
sheet.spreads_history <- 'CDS_spreads_history'
sheet.entities <- 'Entities'
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
zero.cutoff <- 0.01 # spread diffs smaller than this threshold value are considered to be zero
# Function definitions
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
drop.name = function(series.name, spread.frame, entities.frame){
spread.frame <- spread.frame[names(spread.frame) != series.name]
entities.frame <- subset(entities.frame, entities.frame$Name != series.name)
num.entities = num.entities-1
resultList <- list("spreads" = spread.frame, "entities" = entities.frame, "count_entities" = num.entities)
return(resultList)
}
# load cds spreads time series from Excel sheet CDS_spreads_history into R dataframe
cds.spread = read_excel(file.path(data.path, excel.file),
sheet.spreads_history,
range = range.spreads_history)
file.path(here))
file.path(here()))
file.path(here())
file.path(here(), '/../..')
file.path(here(), '../..')
file.path(here(), '../../CQF')
getwd()
file.path(here('../..''))
file.path(here('../..'))
file.path(here(../..))
file.path(here(..))
file.path(here(../))
file.path(here('../'))
file.path(here('/..'))
file.path(here('..'))
file.path(here('..'))
file.path(here())
file.path(here('..'))
file.path(here(".."))
file.path(here("/.."))
file.path(here("../.."))
dirname(dirname(dirname('/CQF/basket_default_swap/data/Automotive')))
dirname(dirname(dirname(getcwd(), '/CQF/basket_default_swap/data/Automotive')))
dirname(dirname(dirname(getcwd())))
dirname(dirname(dirname(getwd())))
dirname(dirname(dirname(getwd('/basket_default_swap'))))
file.path(dirname(dirname(dirname(getwd()))),'/basket_default_swap')
file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap')
file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Automotive')
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variable values
data.set = "insurance"
data.path <- switch(data.set,
"retail" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Retail'),
"banks" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Banks'),
"automotive" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Automotive'),
"insurance" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Insurance'))
range.spreads_history <- switch(data.set,
"retail" = 'E21:J2104',
"banks" = 'E21:N1975',
"automotive" = 'E21:J2104',
"insurance" = 'E21:O1974')
range.entities <- switch(data.set,
"retail" = 'A1:B6',
"banks" = 'A1:B10',
"automotive" = 'A1:B6',
"insurance" = 'A1:B11')
num.entities <- switch(data.set,
"retail" =  5,
"banks" = 9,
"automotive" = 5,
"insurance" = 10)
excel.file <- 'CDS_spreads.xlsx'
sheet.spreads_history <- 'CDS_spreads_history'
sheet.entities <- 'Entities'
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
zero.cutoff <- 0.01 # spread diffs smaller than this threshold value are considered to be zero
# Function definitions
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
drop.name = function(series.name, spread.frame, entities.frame){
spread.frame <- spread.frame[names(spread.frame) != series.name]
entities.frame <- subset(entities.frame, entities.frame$Name != series.name)
num.entities = num.entities-1
resultList <- list("spreads" = spread.frame, "entities" = entities.frame, "count_entities" = num.entities)
return(resultList)
}
# load cds spreads time series from Excel sheet CDS_spreads_history into R dataframe
cds.spread = read_excel(file.path(data.path, excel.file),
sheet.spreads_history,
range = range.spreads_history)
# load entity names from Excel sheet 'Entities'
cds.entities = read_excel(file.path(data.path, excel.file),
sheet.entities,
range = range.entities)
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variables
data.set = "automotive"
data.path <- switch(data.set,
"retail" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Retail'),
"banks" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Banks'),
"automotive" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Automotive'),
"insurance" = file.path(dirname(dirname(dirname(getwd()))),'basket_default_swap/data/Insurance'))
range.price_history <- switch(data.set,
"retail" = 'B2:G2821',
"banks" = 'B2:J2791',
"automotive" = 'B2:G2798',
"insurance" = 'B2:L2821')
range.entities <- switch(data.set,
"retail" = 'A1:B6',
"banks" = 'A1:B10',
"automotive" = 'A1:B6',
"insurance" = 'A1:B11')
num.entities <- switch(data.set,
"retail" =  5,
"banks" = 9,
"automotive" = 5,
"insurance" = 10)
excel.file <- 'CDS_spreads.xlsx'
sheet.price_history <- 'Equity_prices'
sheet.entities <- 'Entities'
max.
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(X, h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
drop.name = function(series.name, spread.frame, entities.frame){
spread.frame <- spread.frame[names(spread.frame) != series.name]
entities.frame <- subset(entities.frame, entities.frame$Name != series.name)
num.entities = num.entities-1
resultList <- list("spreads" = spread.frame, "entities" = entities.frame, "count_entities" = num.entities)
return(resultList)
}
equity.price = read_excel(file.path(data.path, excel.file),
sheet.price_history,
range = range.price_history)
# load entity names from Excel sheet 'Entities'
cds.entities = read_excel(file.path(data.path, excel.file),
sheet.entities,
range = range.entities)
# Make the date column the data.frame row index
equity.price <- as.data.frame(equity.price) # convert from tibble to data.frame
row.names(equity.price) <- equity.price$Timestamp
equity.price <- equity.price[,-1]
# count missing values
missing_values <- equity.price %>% #select(where(is.numeric)) %>%
summarise_all(list(~(sum(is.na(.)))))
View(missing_values)
equity.price <- equity.price %>%
mutate_at(.vars = colnames(equity.price), list(~na.approx(.)))
equity.returns <- equity.price %>%
mutate(across(where(is.numeric), list(ret = ~(log(.x/lag(.x))))))
# remove levels
equity.returns <- subset(equity.returns, select = -c(1:num.entities))
# Remove last row
equity.returns <- tail(equity.returns,-1)
equity.returns <- equity.returns[complete.cases(equity.returns[1:num.entities]),]
equity.returns <- tail(equity.returns, 500)
bmw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw)$
bmw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw)$
bmw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw)
time_series_index = 1
user.bw = 0.0000625 #  0.000099
user.binw = 0.09 # 0.09
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = user.bw), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(user.bw)))
bmw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw)
bmw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = user.bw), binw = user.binw)
View(bmw.uniform)
bmw.uniform$x
View(cds.entities)
time_series_index = 4
user.bw = 0.0000625 #  0.000099
user.binw = 0.09 # 0.09
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = user.bw), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(user.bw)))
vw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, 4]), bw = user.bw), binw = user.binw)
View(vw.uniform)
df <- data.frame(col1 = c('BMW', 'Volkswagen', 'Stellantis', 'Volvo', 'Mercedes-Benz'))
View(df)
df <- data.frame(col1 = c(cds.entitities$Name))
df <- data.frame(col1 = c(cds.entities$Name))
df
df <- data.frame <- colnames(c(cds.entities$Name))
df
df <- data.frame
df <- colnames(c(cds.entities$Name))
df
colnames(df) <- c(cds.entities$Name)
uniforms <- data.frame(col1 = bmw.uniform, col2 = vw.uniform)
uniforms <- data.frame(col1 = bmw.uniform$x, col2 = vw.uniform$x)
colnames(uniforms) <- c(cds.entities$Name)
colnames(uniforms) <- c(cds.entities$Name)
cds.entities$Name[1:2]
colnames(uniforms) <- c(cds.entities$Name[1:2])
uniforms
write.csv (x = as.data.frame(uniforms), file = "pseudo.samples.csv", sep=",")
getwd()
setwd(dirname(dirname(here())))
getwd()
setwd(file.path(dirname(dirname(getwd())),'basket_default_swap/data/PseudoSamples'))
setwd(file.path(dirname(dirname(here()),'basket_default_swap/data/PseudoSamples'))
getwd()
setwd(file.path(dirname(dirname(here()),'basket_default_swap/data/PseudoSamples')))
setwd(file.path(dirname(dirname(here())),'basket_default_swap/data/PseudoSamples'))
setwd(file.path(dirname(dirname(here())),'basket_default_swap/data/PseudoSamples'), 'basket_default_swap/data/PseudoSamples')
getwd()
setwd(file.path(dirname(dirname(here())),'basket_default_swap/data/PseudoSamples'), '/data/PseudoSamples')
setwd(file.path(dirname(dirname(here())),'basket_default_swap/data/PseudoSamples'), '/data/PseudoSamples')
setwd(file.path(dirname(dirname(here()))), '/data/PseudoSamples')
setwd(file.path(dirname(dirname(here())), '/data/PseudoSamples'))
getwd()
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variables
data.set = "final_basket"
data.path <- data.set = file.path(dirname(dirname(dirname(getwd()))), 'basket_default_swap/data/final_basket')
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variables
data.set = "final_basket"
data.path <- file.path(dirname(dirname(dirname(getwd()))), 'basket_default_swap/data/final_basket')
range.price_history <- data.set = 'B2:G2821'
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variables
data.set = "final_basket"
data.path <- file.path(dirname(dirname(dirname(getwd()))), 'basket_default_swap/data/final_basket')
range.price_history <- 'B2:G2821'
range.entities <- 'A1:B6'
num.entities <- 5
excel.file <- 'CDS_spreads.xlsx'
sheet.price_history <- 'Equity_prices'
sheet.entities <- 'Entities'
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(X, h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
# read in Excel file, tab CDS_spreads_history into R dataframe
equity.price = read_excel(file.path(data.path, excel.file),
sheet.price_history,
range = range.price_history)
excel.file <- 'CDS_spreads_basket.xlsx'
sheet.price_history <- 'Equity_prices'
sheet.entities <- 'Entities'
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
# Function definitions
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(X, h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
# read in Excel file, tab CDS_spreads_history into R dataframe
equity.price = read_excel(file.path(data.path, excel.file),
sheet.price_history,
range = range.price_history)
library(readxl) # Excel reader package
library(dplyr) # Dataframe package
library(zoo) # Another Dataframe package
library(ks) # kernel smoothing package, alternative to MATLAB's ksdensity function
library(psych) # for plotting scatterplot matrices with uniforms on the diagonal
library(here) # current working directory
# Global variables
data.set = "final_basket"
data.path <- file.path(dirname(dirname(dirname(getwd()))), 'basket_default_swap/data/final_basket')
range.price_history <- 'B2:G2821'
range.entities <- 'A1:B6'
num.entities <- 5
excel.file <- 'CDS_spreads_basket.xlsx'
sheet.price_history <- 'Equity_prices'
sheet.entities <- 'Entities'
max.datapoints <- 500 # for example: 2 years daily observations on business days is approximately 500 observations
# Function definitions
pseudo.uniform = function(X, bw_parameter){
empirical_cdf <- kcde(X, h = bw_parameter)
predict(empirical_cdf, x=X)
}
empirical.cdf = function(X, bw_parameter){
empirical_cdf <- kcde(unlist(X), h = bw_parameter)
return(empirical_cdf)
}
# read in Excel file, tab CDS_spreads_history into R dataframe
equity.price = read_excel(file.path(data.path, excel.file),
sheet.price_history,
range = range.price_history)
View(equity.price)
cds.entities = read_excel(file.path(data.path, excel.file),
sheet.entities,
range = range.entities)
# Make the date column the data.frame row index
equity.price <- as.data.frame(equity.price) # convert from tibble to data.frame
row.names(equity.price) <- equity.price$Timestamp
equity.price <- equity.price[,-1]
# count missing values
missing_values <- equity.price %>% #select(where(is.numeric)) %>%
summarise_all(list(~(sum(is.na(.)))))
View(missing_values)
View(equity.price)
# Drop first row (missing values)
equity.price <- equity.price[-1, ]
# interpolate missing values (all columns)
equity.price <- equity.price %>%
mutate_at(.vars = colnames(equity.price), list(~na.approx(.)))
equity.returns <- equity.price %>%
mutate(across(where(is.numeric), list(ret = ~(log(.x/lag(.x))))))
# remove levels
equity.returns <- subset(equity.returns, select = -c(1:num.entities))
View(equity.returns)
equity.returns <- equity.returns[complete.cases(equity.returns[1:num.entities]),]
# Restrict data frame to two years of daily data
equity.returns <- tail(equity.returns, max.datapoints)
View(equity.returns)
pairs.panels(equity.returns[, 1:num.entities],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
# plot histogram
user.bw = 0.0005 # 0.0003
user.binw = 0.09 # 0.09
for (time_series_index in 1:num.entities){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = user.bw), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(user.binw)))
}
time_series_index = 1
bw_list = c(0.01, 0.005, 0.0025, 0.00125, 0.000625, 0.0003125, 0.00015625, 0.0000783125, 0.00003915625, 0.00001975, 0.000009875, 0.00000493875, 0.000002469, 0.0000012345, 0.00000000000001)
for (bw_ in bw_list){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(bw_)))
}
time_series_index = 2
bw_list = c(0.01, 0.005, 0.0025, 0.00125, 0.000625, 0.0003125, 0.00015625, 0.0000783125, 0.00003915625, 0.00001975, 0.000009875, 0.00000493875, 0.000002469, 0.0000012345, 0.00000000000001)
for (bw_ in bw_list){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(bw_)))
}
time_series_index = 3
bw_list = c(0.01, 0.005, 0.0025, 0.00125, 0.000625, 0.0003125, 0.00015625, 0.0000783125, 0.00003915625, 0.00001975, 0.000009875, 0.00000493875, 0.000002469, 0.0000012345, 0.00000000000001)
for (bw_ in bw_list){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(bw_)))
}
time_series_index = 3
bw_list = c(0.01, 0.005, 0.0025, 0.00125, 0.000625, 0.0003125, 0.00015625, 0.0000783125, 0.00003915625, 0.00001975, 0.000009875, 0.00000493875, 0.000002469, 0.0000012345, 0.00000000000001)
for (bw_ in bw_list){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(bw_)))
}
time_series_index = 4
bw_list = c(0.01, 0.005, 0.0025, 0.00125, 0.000625, 0.0003125, 0.00015625, 0.0000783125, 0.00003915625, 0.00001975, 0.000009875, 0.00000493875, 0.000002469, 0.0000012345, 0.00000000000001)
for (bw_ in bw_list){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(bw_)))
}
time_series_index = 5
bw_list = c(0.01, 0.005, 0.0025, 0.00125, 0.000625, 0.0003125, 0.00015625, 0.0000783125, 0.00003915625, 0.00001975, 0.000009875, 0.00000493875, 0.000002469, 0.0000012345, 0.00000000000001)
for (bw_ in bw_list){
plot(histde(pseudo.uniform(unlist(equity.returns[, time_series_index]), bw = bw_), binw = user.binw), xlab=paste(cds.entities$Name[time_series_index], deparse(bw_)))
}
prudential.uniform <- histde(pseudo.uniform(unlist(equity.returns[, 1]), bw = 0.0003125), binw = 0.09)
bmw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, 2]), bw = 0.0003125), binw = 0.09)
vw.uniform <- histde(pseudo.uniform(unlist(equity.returns[, 3]), bw = 0.0000783125), binw = 0.09)
deutschebank.uniform <- histde(pseudo.uniform(unlist(equity.returns[, 4]), bw = 0.00001975), binw = 0.09)
kering.uniform <- histde(pseudo.uniform(unlist(equity.returns[, 5]), bw = 0.00015625), binw = 0.09)
pseudo.samples <- data.frame(col1 = prudential.uniform$x,
col2 = bmw.uniform$x,
col3 = vw.uniform$x,
col4 = deutschebank.uniform$x,
col5 = kering.uniform$x)
colnames(pseudo.samples) <- c(cds.entities$Name)
# change path to output directory to data/PseudoSamples for saving
setwd(file.path(dirname(dirname(here())), '/data/PseudoSamples'))
# save dataframe for import into python
write.csv (x = as.data.frame(pseudo.samples), file = "pseudo.samples.csv", sep=",")
